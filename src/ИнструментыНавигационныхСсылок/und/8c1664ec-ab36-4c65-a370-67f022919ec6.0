{4,
{49,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{2,1952a54f-35ad-4928-902f-df212ab38ca3,"ПриСохраненииДанныхВНастройкахНаСервере",79cea13e-f6fb-4483-905d-713326405771,"ПриЗагрузкеДанныхИзНастроекНаСервере",1,0,1952a54f-35ad-4928-902f-df212ab38ca3,0,1,79cea13e-f6fb-4483-905d-713326405771,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаНавигационнаяСсылка",
{1,1,
{"ru","Группа навигационная ссылка"}
},
{1,1,
{"ru","Группа навигационная ссылка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"НавигационнаяСсылкаСтрока",1,0,
{1,0},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,1,
{"ru","e1cib/data/..."}
},2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"НавигационнаяСсылкаСтрокаПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"НавигационнаяСсылкаСтрокаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НавигационнаяСсылкаСтрокаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"НавигационнаяСсылкаПредставление",0,0,
{1,0},
{1,0},
{1,
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,0,2,2,2,
{1,0},1,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{1,eba5f295-c611-4dd9-84b5-22911ad60c53,"НавигационнаяСсылкаПредставлениеНажатие",1,0,eba5f295-c611-4dd9-84b5-22911ad60c53,0,1},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},1,0,0,1,0},
{0,1,0},1,
{22,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"НавигационнаяСсылкаПредставлениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НавигационнаяСсылкаПредставлениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},1,0,1,
{12,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНавигационнаяСсылкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаУникальныйИдентификатор",
{1,1,
{"ru","Группа уникальный идентификатор"}
},
{1,1,
{"ru","Группа уникальный идентификатор"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"УникальныйИдентификатор",1,0,
{1,0},
{1,0},
{1,
{3}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,1,
{"ru","00000000-0000-0000-0000-000000000000"}
},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УникальныйИдентификаторКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УникальныйИдентификаторРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},1,0,1,
{12,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаУникальныйИдентификаторРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"СсылкаНаОбъект",0,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,0,2,2,2,
{1,0},1,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0,1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},1,0,0,1,0},
{0,1,0},1,
{22,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СсылкаНаОбъектКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СсылкаНаОбъектРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КодДляПолученияЭлемента",1,0,
{1,1,
{"ru","Варианты кода для получения элемента"}
},
{1,0},
{1,
{6}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,2,2,0,1,2,1,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,1,1,
{2},"Consolas",1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КодДляПолученияЭлементаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КодДляПолученияЭлементаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ПоследниеНавигационныеСсылки = Элементы.НавигационнаяСсылкаСтрока.СписокВыбора;
	Настройки.Вставить(""ПоследниеНавигационныеСсылки"", ПоследниеНавигационныеСсылки);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	#Область ПоследниеНавигационныеСсылки
	ПоследниеНавигационныеСсылки = Настройки[""ПоследниеНавигационныеСсылки""];
	Если ПоследниеНавигационныеСсылки = Неопределено Тогда ПоследниеНавигационныеСсылки = Новый СписокЗначений КонецЕсли;
	ПредставленияНавСсылок = ПредставленияНавигационныхСсылок(ПоследниеНавигационныеСсылки.ВыгрузитьЗначения());
	СписокВыбора = Элементы.НавигационнаяСсылкаСтрока.СписокВыбора;
	Для каждого ЭлементСписка Из ПоследниеНавигационныеСсылки Цикл
		СписокВыбора.Добавить(ЭлементСписка.Значение, ПредставлениеНавигационнойСсылкиФорматированнаяСтрока(ЭлементСписка.Значение, ПредставленияНавСсылок[ЭлементСписка.Значение]));	
	КонецЦикла; 
	#КонецОбласти // ПоследниеНавигационныеСсылки 
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НавигационнаяСсылкаСтрокаПриИзменении(Элемент)
	
	ЗаполнитьВедомыеРеквизитыНавигационнойСсылки();
	
	СписокВыбора = Элементы.НавигационнаяСсылкаСтрока.СписокВыбора;
	Если ЗначениеЗаполнено(НавигационнаяСсылкаПредставление) Тогда
		ЭлементСписка = СписокВыбора.НайтиПоЗначению(НавигационнаяСсылкаСтрока);
		Если ЭлементСписка = Неопределено Тогда
			ЭлементСписка = СписокВыбора.Добавить(НавигационнаяСсылкаСтрока);
		КонецЕсли; 
		ЭлементСписка.Представление = ПредставлениеНавигационнойСсылкиФорматированнаяСтрока(НавигационнаяСсылкаСтрока, НавигационнаяСсылкаПредставление);
		СписокВыбора.Сдвинуть(ЭлементСписка, - СписокВыбора.Индекс(ЭлементСписка));	
		МаксКоличествоЭлементовСписка = 42;
		Пока СписокВыбора.Количество() > МаксКоличествоЭлементовСписка Цикл
		    СписокВыбора.Удалить(МаксКоличествоЭлементовСписка);
		КонецЦикла;
		ЭтаФорма.СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВедомыеРеквизитыНавигационнойСсылки()
	
	НавигационнаяСсылкаПредставление = ПредставлениеНавигационнойСсылки(НавигационнаяСсылкаСтрока);
	УникальныйИдентификаторОбъекта	 = Новый УникальныйИдентификатор;
	СсылкаНаОбъект					 = СсылкаНаОбъектНавигационнойСсылки(НавигационнаяСсылкаСтрока, УникальныйИдентификаторОбъекта);
	УникальныйИдентификаторСтрока	 = УникальныйИдентификаторОбъекта;
	КодДляПолученияЭлемента			 = КодыПолученияСсылки(СсылкаНаОбъект);	

КонецПроцедуры

&НаКлиенте
Процедура НавигационнаяСсылкаПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(НавигационнаяСсылкаСтрока) Тогда
		СтандартнаяОбработка = Ложь;
		ПерейтиПоНавигационнойСсылке(НавигационнаяСсылкаСтрока);
	КонецЕсли;
КонецПроцедуры
 
#КонецОбласти // ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиКомандФормы

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьУникальныйИдентификаторНавигационнойСсылки(НавигационнаяСсылка)

	Если не ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		Возврат новый УникальныйИдентификатор(""00000000-0000-0000-0000-000000000000"");
	КонецЕсли; 	
	
	Ссылка = СсылкаНаОбъектНавигационнойСсылки(НавигационнаяСсылка);
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Ссылка.УникальныйИдентификатор();	
	КонецЕсли; 

КонецФункции // ПолучитьУникальныйИдентификаторНавигационнойСсылки()

// Преобразует уникальный идентификатор в шестнадцатеричное число,
//	которое используется в навигационных ссылках
//
// Параметры:
//  УникальныйИдентификатор	 - УникальныйИдентификатор, Строка	 - Преобразуемый идентификатор
//  ДобавитьПрефикс			 - Булево							 - Если Истина - к числу будет добавлен префикс ""0x""
// 
// Возвращаемое значение:
//   - Строка   - Сформированное строковое представление числа, Если формат идентификатора не верен, возвращается Неопределено.
//
&НаКлиентеНаСервереБезКонтекста
Функция УникальныйИдентификаторВШестнадцатеричноеЧисло(Знач УникальныйИдентификатор, ДобавитьПрефикс = Истина)

	// Входящее:	00112233-4455-6677-8899-aabbccddeeff
	// Ожидается:	[0x]8899aabbccddeeff6677445500112233
	
	СоставныеЧасти = СтрРазделить(Строка(УникальныйИдентификатор), ""-"", Ложь);
	Если СоставныеЧасти.Количество() <> 5 Тогда Возврат Неопределено КонецЕсли; 	
	
	ШестнадцатеричноеЧисло = 
	?(ДобавитьПрефикс, ""0x"", """")
	+ СоставныеЧасти[3]		// 8899 
	+ СоставныеЧасти[4]		// aabbccddeeff
	+ СоставныеЧасти[2]		// 6677
	+ СоставныеЧасти[1]		// 4455
	+ СоставныеЧасти[0];	// 00112233
	
	Возврат ШестнадцатеричноеЧисло;

КонецФункции // УникальныйИдентификаторВШестнадцатеричноеЧисло()

// Формирует уникальный идентификатор из шестнадцатеричного числа
//
// Параметры:
//  ШестнадцатеричноеЧисло	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаКлиентеНаСервереБезКонтекста
Функция УникальныйИдентификаторИзШестнадцатеричногоЧисла(Знач ШестнадцатеричноеЧисло)

	// Входящее:	[0x]8899aabbccddeeff6677445500112233
	// Ожидается:	00112233-4455-6677-8899-aabbccddeeff
	
	ШестнадцатеричноеЧислоБезПрефикса = СтрЗаменить(ШестнадцатеричноеЧисло, ""0x"", """");
	Если СтрДлина(ШестнадцатеричноеЧислоБезПрефикса) <> 32 Тогда Возврат Неопределено КонецЕсли;
	
	// Разметка:        1   5           17  21  25
	// Входящее:	[0x]8899aabbccddeeff6677445500112233
	ЧастиЧисла = Новый Массив;
	ЧастиЧисла.Добавить(Сред(ШестнадцатеричноеЧислоБезПрефикса, 1,	 4));	// 8899
	ЧастиЧисла.Добавить(Сред(ШестнадцатеричноеЧислоБезПрефикса, 5,	 12));	// aabbccddeeff
	ЧастиЧисла.Добавить(Сред(ШестнадцатеричноеЧислоБезПрефикса, 17,	 4));	// 6677
	ЧастиЧисла.Добавить(Сред(ШестнадцатеричноеЧислоБезПрефикса, 21,	 4));	// 4455
	ЧастиЧисла.Добавить(Сред(ШестнадцатеричноеЧислоБезПрефикса, 25,	 8));	// 00112233
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор(
			ЧастиЧисла[4]		// 00112233
	+ ""-"" + ЧастиЧисла[3]		// 4455
	+ ""-"" + ЧастиЧисла[2]		// 6677
	+ ""-"" + ЧастиЧисла[0]		// 8899 
	+ ""-"" + ЧастиЧисла[1]		// aabbccddeeff
	);
	
	Возврат УникальныйИдентификатор;

КонецФункции // УникальныйИдентификаторИзШестнадцатеричногоЧисла()

// По навигационной ссылке получает ссылку на объект.
//
// Параметры:
//  НавигационнаяСсылка		 - Строка					 - Навигационная ссылка
//	УникальныйИдентификатор	 - УникальныйИдентификатор	 - Уникальный идентификатор объекта из навигационной ссылки
//  ИмяРеквизита			 - Строка					 - Имя реквизита объекта или колонки табличной части, если указано в навигационной ссылке.
//  ИмяТабличнойЧасти		 - Строка					 - Имя табличной части, если указано в навигационной ссылке.
//  ИндексТабЧасти			 - Число					 - Индекс в табличной части, если указан в навигационной ссылке.
// 
// Возвращаемое значение:
//  Ссылка - Если определить ссылку не удалось - возвращается Неопределено.
//
&НаСервереБезКонтекста
Функция СсылкаНаОбъектНавигационнойСсылки(НавигационнаяСсылка, УникальныйИдентификатор = Неопределено, ИмяРеквизита = Неопределено, ИмяТабличнойЧасти = Неопределено, ИндексТабЧасти = Неопределено)
	
	// Форматы ссылок (см. https://its.1c.ru/db/v8doc):
	// e1cib/data/<путькметаданным>?ref=<идентификаторссылки>
	// e1cib/data/<путькметаданным>.<имяреквизита>?ref=<идентификаторссылки>
	// e1cib/data/<путькметаданным>.<имятабличнойчасти>.<имяреквизита>?ref=<идентификаторссылки>&index=<индексстрокитабличнойчасти>
	
	ОперандДанных	 = ""e1cib/data/"";
	ОперандСсылки	 = ""?ref="";
	ОперандИндекса	 = ""&index="";
	
	ПозицияОперандаДанных	 = СтрНайти(НавигационнаяСсылка, ОперандДанных);
	ПозицияОперандаСсылки	 = СтрНайти(НавигационнаяСсылка, ОперандСсылки);
	ПозицияОперандаИндекса	 = СтрНайти(НавигационнаяСсылка, ПозицияОперандаИНдекса);
	
	ЕстьСсылка = Булево(ПозицияОперандаДанных) и Булево(ПозицияОперандаСсылки); 		
	Если не ЕстьСсылка Тогда Возврат Неопределено КонецЕсли;
	
	ПолноеИмяМетаданныхСсылки = Сред(
	НавигационнаяСсылка, 
	ПозицияОперандаДанных + СтрДлина(ОперандДанных),
	(ПозицияОперандаСсылки - 1) - (ПозицияОперандаДанных - 1 + СтрДлина(ОперандДанных))
	);
	
	СтекИмени = СтрРазделить(ПолноеИмяМетаданныхСсылки, ""."", Ложь);
	Если СтекИмени.ВГраница() < 1 Тогда Возврат Неопределено КонецЕсли; 
	
	ИмяОбъектаМетаданных = СтекИмени[1];
	ПолноеИмяМетаданного = СтекИмени[0] + ""."" + СтекИмени[1];	// напр. Документ.ИмяДокумента
	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданного);
	Если ОбъектМетаданных = Неопределено Тогда Возврат Неопределено КонецЕсли; 
	
	УникальныйИдентификаторШестнЧисло = Сред(НавигационнаяСсылка, ПозицияОперандаСсылки + СтрДлина(ОперандСсылки), 32);
	
	УникальныйИдентификатор = УникальныйИдентификаторИзШестнадцатеричногоЧисла(УникальныйИдентификаторШестнЧисло);
	Если УникальныйИдентификатор = Неопределено Тогда Возврат Неопределено КонецЕсли; 
	
	Если		 Метаданные.Документы				.Содержит(ОбъектМетаданных) Тогда Ссылка = Документы				[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	ИначеЕсли	 Метаданные.Справочники				.Содержит(ОбъектМетаданных) Тогда Ссылка = Справочники				[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	ИначеЕсли	 Метаданные.ПланыВидовХарактеристик	.Содержит(ОбъектМетаданных) Тогда Ссылка = ПланыВидовХарактеристик	[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	ИначеЕсли	 Метаданные.ПланыСчетов				.Содержит(ОбъектМетаданных) Тогда Ссылка = ПланыСчетов				[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	ИначеЕсли	 Метаданные.ПланыВидовРасчета		.Содержит(ОбъектМетаданных) Тогда Ссылка = ПланыВидовРасчета		[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	ИначеЕсли	 Метаданные.ПланыОбмена				.Содержит(ОбъектМетаданных) Тогда Ссылка = ПланыОбмена				[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	ИначеЕсли	 Метаданные.Задачи					.Содержит(ОбъектМетаданных) Тогда Ссылка = Задачи					[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	ИначеЕсли	 Метаданные.БизнесПроцессы			.Содержит(ОбъектМетаданных) Тогда Ссылка = БизнесПроцессы			[ИмяОбъектаМетаданных].ПолучитьСсылку(УникальныйИдентификатор);
	Иначе Возврат Неопределено;
	КонецЕсли; 	
	
	Если СтекИмени.ВГраница() = 3 Тогда			// Есть табличная часть и реквизит
		ИмяРеквизита		 = СтекИмени[3];
		ИмяТабличнойЧасти	 = СтекИмени[2];
		ЕстьИндекс = Булево(ПозицияОперандаИндекса);
		Если ЕстьИндекс Тогда
			ИндексТабЧастиСтрокой = Сред(НавигационнаяСсылка, ПозицияОперандаИндекса + СтрДлина(ОперандИндекса));
			Если ЗначениеЗаполнено(ИндексТабЧастиСтрокой) Тогда
				ИндексТабЧасти = Число(ИндексТабЧастиСтрокой);
			иначе
				ИндексТабЧасти = 0;
			КонецЕсли; 
		КонецЕсли; 
	ИначеЕсли СтекИмени.ВГраница() = 3 Тогда	// Есть реквзит
		ИмяРеквизита = СтекИмени[2];
	КонецЕсли; 
	
	Возврат Ссылка;
	
КонецФункции // СсылкаНаОбъектНавигационнойСсылки()

&НаКлиентеНаСервереБезКонтекста
Функция ПредставленияНавигационныхСсылок(НавигационныеСсылки)
	
	Представления = Новый Соответствие;

	ПредставленияНавСсылок = ПолучитьПредставленияНавигационныхСсылок(НавигационныеСсылки);
	Для Индекс = 0 По НавигационныеСсылки.ВГраница() Цикл
		ПредставлениеНавСсылки = ПредставленияНавСсылок[Индекс];
		Если ТипЗнч(ПредставлениеНавСсылки) = Тип(""ПредставлениеНавигационнойСсылки"") Тогда
			Представление = ПредставлениеНавСсылки.Текст;
		Иначе
			Представление = Неопределено;
		КонецЕсли; 
		Представления.Вставить(НавигационныеСсылки[Индекс], Представление);
	КонецЦикла; 	
	
	Возврат Представления;

КонецФункции // ПредставленияНавигационныхСсылок()
 
&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеНавигационнойСсылки(НавигационнаяСсылка)
	
	Представление = """";
	
	НавигационныеСсылки = Новый Массив;
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		НавигационныеСсылки.Добавить(НавигационнаяСсылка);
	КонецЕсли; 
	ПредставленияНавСсылок = ПолучитьПредставленияНавигационныхСсылок(НавигационныеСсылки);
	Если ЗначениеЗаполнено(ПредставленияНавСсылок) Тогда
		ПредставлениеНавСсылки = ПредставленияНавСсылок[0];
		Если ТипЗнч(ПредставлениеНавСсылки) = Тип(""ПредставлениеНавигационнойСсылки"") Тогда
			Представление = ПредставлениеНавСсылки.Текст;
		КонецЕсли; 
	КонецЕсли;

	Возврат Представление;
	
КонецФункции	// ПредставлениеНавигационнойСсылки()

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеНавигационнойСсылкиФорматированнаяСтрока(НавигационнаяСсылка, Представление)
	
	ШрифтСсылки = Новый Шрифт(,,,, Истина);

	СоставСтроки = новый Массив;
	СоставСтроки.Добавить(Представление);
	СоставСтроки.Добавить("" "");
	СоставСтроки.Добавить(новый ФорматированнаяСтрока(НавигационнаяСсылка, , WebЦвета.Серый));
	
	Возврат новый ФорматированнаяСтрока(СоставСтроки);

КонецФункции // ПредставлениеНавигационнойСсылкиДляСписка()

&НаСервереБезКонтекста
Функция КодыПолученияСсылки(СсылкаНаОбъект)

	КодыМодуля = Новый Массив;
	
	Для Вариант = 0 По 2 Цикл
		
		Попытка
			КодМодуля = КодПолученияСсылки(СсылкаНаОбъект, Вариант);
			Если ЗначениеЗаполнено(КодМодуля) Тогда
				КодыМодуля.Добавить(КодМодуля);				
			КонецЕсли; 
		Исключение
		    Продолжить;
		КонецПопытки; 
	
	КонецЦикла; 	
	
	Возврат СтрСоединить(КодыМодуля, Символы.пс);

КонецФункции // КодыПолученияСсылки()
 
// Получает программный код для получения указанной ссылки через уникальный идентификатор
//
// Параметры:
//  СсылкаНаОбъект	 - ЛюбаяСсылка	 - Ссылка на объект.
//  Вариант			 - Число		 - Вариант получения ссылки. Варанты:
//		* 0 - Получение по уникальному идентификатору. 
//			Например: Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(""00112233-4455-6677-8899-aabbccddeeff""))
//		* 1 - Получение по коду/номеру
//			Например: Справочники.Номенклатура.НайтиПоКоду(""123456789"")
//			Требует обращение к серверу для определения кода и получения самого элемента.
//			Используется простая форма написания, без поддержки иерархии - для производительности.
//			Идентичность не контролируется. Возможно получение другого элемента с таким же кодом/номером в пределах периода нумерации.
//			Если код/номер не используется объектом метаданных - будет вызвано исключение.
//		* 2 - Получение по наименованию
//			Требует обращение к серверу для определения наименования и получения самого элемента.
//			Идентичность не контролируется. Возможно получение другого элемента с таким же наименованием.
//			Если наименование не поддерживается объектом метаданных - будет вызвано исключение.
//			Если наименование не используется объектом метаданных - будет вызвано исключение.
// 
// Возвращаемое значение:
//  Строка - Команда для получения ссылки. 
//
&НаСервереБезКонтекста
Функция КодПолученияСсылки(СсылкаНаОбъект, Вариант = 0)
	
	ТекстМодуля = """";
		
	ОбъектМетаданных = СсылкаНаОбъект.Метаданные();
	
	Если		 Метаданные.Документы				.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""Документы"";
	ИначеЕсли	 Метаданные.Справочники				.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""Справочники"";
	ИначеЕсли	 Метаданные.ПланыВидовХарактеристик	.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""ПланыВидовХарактеристик"";
	ИначеЕсли	 Метаданные.ПланыСчетов				.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""ПланыСчетов"";
	ИначеЕсли	 Метаданные.ПланыВидовРасчета		.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""ПланыВидовРасчета"";
	ИначеЕсли	 Метаданные.ПланыОбмена				.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""ПланыОбмена"";
	ИначеЕсли	 Метаданные.Задачи					.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""Задачи"";
	ИначеЕсли	 Метаданные.БизнесПроцессы			.Содержит(ОбъектМетаданных) Тогда ИмяМенеджера = ""БизнесПроцессы"";
	Иначе Возврат ТекстМодуля;
	КонецЕсли; 	
	
	ИмяОбъектаМетаданных = ОбъектМетаданных.Имя;
	
	Если СсылкаНаОбъект.Пустая() Тогда
		
		ТекстМодуля = СтрШаблон(
		""%1.%2.ПустаяСсылка()"",
		ИмяМенеджера,
		ИмяОбъектаМетаданных
		);
		
	ИначеЕсли Вариант = 0 Тогда	// УникальныйИдентификатор
		
		ТекстМодуля = СтрШаблон(
		""%1.%2.ПолучитьСсылку(Новый УникальныйИдентификатор(""""%3""""))"",
		ИмяМенеджера,
		ИмяОбъектаМетаданных,
		СсылкаНаОбъект.УникальныйИдентификатор()
		);
		
	ИначеЕсли Вариант = 1 Тогда	// Код/Номер
		
		МенеджерыИспользующиеКод	 = ""Справочники, ПланыВидовХарактеристик, ПланыСчетов, ПланыВидовРасчета, ПланыОбмена"";
		МенеджерыИспользующиеНомер	 = ""Документы, БизнесПроцессы, Задачи"";
		
		КодНомерЭтоЧисло = Ложь;
		
		ИспользуетсяКод = Булево(СтрНайти(МенеджерыИспользующиеКод, ИмяМенеджера))
			И ОбъектМетаданных.ДлинаКода > 0;
		
		ИспользуетсяНомер = Булево(СтрНайти(МенеджерыИспользующиеНомер, ИмяМенеджера))
			И ОбъектМетаданных.ДлинаНомера > 0;
		
		Если Не ИспользуетсяКод И Не ИспользуетсяНомер Тогда
			ВызватьИсключение СтрШаблон(""Объект метаданных %1 не использует ни код, ни номер"", ОбъектМетаданных.ПолноеИмя());
		КонецЕсли; 
		
		Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
			КодНомерЭтоЧисло = ОбъектМетаданных.ТипКода = Метаданные.СвойстваОбъектов.ТипКодаСправочника.Число;
		ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(ОбъектМетаданных) Тогда
			КодНомерЭтоЧисло = ОбъектМетаданных.ТипКода = Метаданные.СвойстваОбъектов.ТипКодаПланаВидовРасчета.Число;
		ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда
			КодНомерЭтоЧисло = ОбъектМетаданных.ТипНомера = Метаданные.СвойстваОбъектов.ТипНомераДокумента.Число;
		ИначеЕсли Метаданные.БизнесПроцессы.Содержит(ОбъектМетаданных) Тогда
			КодНомерЭтоЧисло = ОбъектМетаданных.ТипНомера = Метаданные.СвойстваОбъектов.ТипНомераБизнесПроцесса.Число;
		ИначеЕсли Метаданные.Задачи.Содержит(ОбъектМетаданных) Тогда
			КодНомерЭтоЧисло = ОбъектМетаданных.ТипНомера = Метаданные.СвойстваОбъектов.ТипНомераЗадачи.Число;
		КонецЕсли; 	
		
		#Область ПолучениеКодаНомераДаты
		
		ЕстьПериодичностьНомера = 
			(Метаданные.Документы.Содержит(ОбъектМетаданных)
				И ОбъектМетаданных.ПериодичностьНомера <> Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Непериодический) 
			Или (Метаданные.БизнесПроцессы.Содержит(ОбъектМетаданных)
				И ОбъектМетаданных.ПериодичностьНомера <> Метаданные.СвойстваОбъектов.ПериодичностьНомераБизнесПроцесса.Непериодический);
			
		Если ИспользуетсяКод Тогда
			ПоляВыбора = ""Код"";
		ИначеЕсли ЕстьПериодичностьНомера Тогда
			ПоляВыбора = ""Номер, Дата"";
		Иначе
			ПоляВыбора = ""Номер"";
		КонецЕсли; 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		СтрШаблон(
		""ВЫБРАТЬ ПЕРВЫЕ 1 %1 ИЗ %2 ГДЕ Ссылка = &Ссылка"",
		ПоляВыбора,							// %1
		ОбъектМетаданных.ПолноеИмя());		// %2
		
		Запрос.УстановитьПараметр(""Ссылка"", СсылкаНаОбъект);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ВызватьИсключение ""Не удалось получить код/номер объекта"";
		КонецЕсли; 
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ИскомыйКодНомерОбъекта = Выборка[0];
		ИскомаяДатаОбъекта = ?(РезультатЗапроса.Колонки.Количество() > 1, Выборка[1], '00010101');
		#КонецОбласти // ПолучениеКодаНомераДаты 
		
		Если КодНомерЭтоЧисло Тогда
			ПредставлениеКодаНомера = Формат(ИскомыйКодНомерОбъекта, ""ЧРД=.; ЧН=0; ЧГ=0"");		
		Иначе
			ПредставлениеКодаНомера = """""""" + СтрЗаменить(ИскомыйКодНомерОбъекта, """""""", """""""""""") + """""""";
		КонецЕсли;
		
		Если ИспользуетсяКод Тогда
			
			ТекстМодуля = СтрШаблон(
			""%1.%2.НайтиПоКоду(%3)"",
			ИмяМенеджера,
			ИмяОбъектаМетаданных,
			ПредставлениеКодаНомера,
			);
			
		ИначеЕсли ЕстьПериодичностьНомера Тогда
			               
			ДатаПериода = Выборка[1];
			
			ТекстМодуля = СтрШаблон(
			""%1.%2.НайтиПоНомеру(%3, '%4')"",
			ИмяМенеджера,
			ИмяОбъектаМетаданных,
			ПредставлениеКодаНомера,
			Формат(ИскомаяДатаОбъекта, ""ДФ=ггггММдд"")
			);
			
		Иначе
			
			ТекстМодуля = СтрШаблон(
			""%1.%2.НайтиПоНомеру(%3)"",
			ИмяМенеджера,
			ИмяОбъектаМетаданных,
			ПредставлениеКодаНомера
			);
		
		КонецЕсли; 
		
	ИначеЕсли Вариант = 2 Тогда	// Наименование
		
		МетаКоллекцииПоддерживающиеНаименование = Новый Массив;
		МетаКоллекцииПоддерживающиеНаименование.Добавить(Метаданные.Задачи);
		МетаКоллекцииПоддерживающиеНаименование.Добавить(Метаданные.ПланыВидовРасчета);
		МетаКоллекцииПоддерживающиеНаименование.Добавить(Метаданные.ПланыВидовХарактеристик);
		МетаКоллекцииПоддерживающиеНаименование.Добавить(Метаданные.ПланыОбмена);
		МетаКоллекцииПоддерживающиеНаименование.Добавить(Метаданные.ПланыСчетов);
		МетаКоллекцииПоддерживающиеНаименование.Добавить(Метаданные.Справочники);
		
		ЕстьНаименование = Ложь;
		Для каждого КоллекцияМетаданных Из МетаКоллекцииПоддерживающиеНаименование Цикл
			Если КоллекцияМетаданных.Содержит(ОбъектМетаданных) Тогда
				ЕстьНаименование = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
		Если Не ЕстьНаименование Тогда
			ВызватьИсключение СтрШаблон(""Объект метаданных %1 не поддерживает наименование"", ОбъектМетаданных.ПолноеИмя());
		КонецЕсли; 
		
		Если ОбъектМетаданных.ДлинаНаименования = 0 Тогда
			ВызватьИсключение СтрШаблон(""Объект метаданных %1 не использует наименование"", ОбъектМетаданных.ПолноеИмя());
		КонецЕсли; 
		
		Запрос = Новый Запрос;
		Запрос.Текст = СтрШаблон(""ВЫБРАТЬ ПЕРВЫЕ 1 Наименование ИЗ %1 ГДЕ Ссылка = &Ссылка"", ОбъектМетаданных.ПолноеИмя());
		Запрос.УстановитьПараметр(""Ссылка"", СсылкаНаОбъект);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ВызватьИсключение ""Не удалось получить наименование объекта"";
		КонецЕсли;
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ИскомоеНаименованиеОбъекта = Выборка[0];
		ПоисковоеНаименованиеОбъекта = """""""" + СтрЗаменить(ИскомоеНаименованиеОбъекта, """""""", """""""""""") + """""""";
		
		ТекстМодуля = СтрШаблон(
		""%1.%2.НайтиПоНаименованию(""""%3"""", Истина)"",
		ИмяМенеджера,
		ИмяОбъектаМетаданных,
		ПоисковоеНаименованиеОбъекта
		);
		
	КонецЕсли; 
	
	Возврат ТекстМодуля;

КонецФункции // ТекстМодуляПолученияСсылки()

#Область ВыборСсылкиНаОбъект

&НаСервереБезКонтекста
Функция СписокДопустимыхРазделовМетаданных()

	СписокРазделов = Новый СписокЗначений;
	СписокРазделов.Добавить(""Документ"",					 ""Документ"", ,					 БиблиотекаКартинок.Документ);
	СписокРазделов.Добавить(""Справочнки"",				 ""Справочник"", ,				 БиблиотекаКартинок.Справочник);
	СписокРазделов.Добавить(""ПланВидовХарактеристик"",	 ""План видов характеристик"", ,	 БиблиотекаКартинок.ПланВидовХарактеристик);
	СписокРазделов.Добавить(""ПланВидовРасчета"",			 ""План видов расчета"", ,		 БиблиотекаКартинок.ПланВидовРасчета);
	СписокРазделов.Добавить(""ПланСчетов"",				 ""План счетов"", ,				 БиблиотекаКартинок.ПланСчетов);
	СписокРазделов.Добавить(""ПланОбмена"",				 ""План видов характеристик"", ,	 БиблиотекаКартинок.ПланОбмена);
	
	Возврат СписокРазделов;

КонецФункции // СписокДопустимыхРазделовМетаданных()

&НаСервереБезКонтекста
Функция КартинкаМетаданного(ИмяРазделаМетаданных)

	ЭлементСписка = СписокДопустимыхРазделовМетаданных().НайтиПоЗначению(ИмяРазделаМетаданных);
	Если ЭлементСписка <> Неопределено Тогда
		Возврат ЭлементСписка.Картинка;
	КонецЕсли; 
	
	Возврат Новый Картинка();
	
КонецФункции // КартинкаМетаданного()
 

#КонецОбласти // ВыборСсылкиНаОбъект 

#КонецОбласти // СлужебныеПроцедурыИФункции





",
{4,6,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",0a7d335d-f9e8-47ea-8367-5bd9ac6d48a1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"НавигационнаяСсылкаСтрока",
{1,1,
{"ru","Навигационная ссылка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"УникальныйИдентификаторСтрока",
{1,1,
{"ru","Уникальный идентификатор"}
},
{"Pattern",
{"S",36,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"НавигационнаяСсылкаПредставление",
{1,1,
{"ru","Навигационная ссылка представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"СсылкаНаОбъект",
{1,1,
{"ru","Ссылка на объект"}
},
{"Pattern",
{"#",280f5f0e-9c8a-49cc-bf6d-4d296cc17a63}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"КодДляПолученияЭлемента",
{1,1,
{"ru","Код для получения элемента"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}